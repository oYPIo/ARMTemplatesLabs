{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "uniqueDnsPrefixForVM": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "Dynamic",
            "metadata": {
                "description": "VM Name Prefix for the Virtual Machine."
            }
        },
        "publicIPAddressType": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "metadata": {
                "description": "Type of public IP address"
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2012-R2-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "vmSize": "Standard_A2",
        "vNetName": "vnet",
        "subnet1Name": "publicsubnet",
        "subnet2Name": "privatesubnet",
        "subnet3Name": "dmzsubnet",
        "vNetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
        "subnet1Ref": "[concat(variables('vNetID'),'/subnets/', variables('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vNetID'),'/subnets/', variables('subnet2Name'))]",
        "subnet3Ref": "[concat(variables('vNetID'),'/subnets/', variables('subnet3Name'))]",
        "vNetAddressPrefix": "10.0.0.0/16",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet2Prefix": "10.0.1.0/24",
        "subnet3Prefix": "10.0.2.0/24",
        "routeTableName": "publictable",
        "customRouteName": "productionsubnet",
        "customRoutePrefix": "10.0.1.0/24",
        "customRoutNextHopeIpAddress": "10.0.2.4",
        
        "NvmPrivateIPAddress": "10.1.1.4",
        "nsgName": "DefaultNSG",
        "scaleNumber": 3,
        "apiVer": "2015-06-15"
    },
    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('uniqueDnsPrefixForVM'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "pubIPLoop",
                "count": "[variables('scaleNumber')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('uniqueDnsPrefixForVM'), copyIndex())]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "DefaultNSG",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "rdp_rule",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableName')]",
            "apiVersion": "2019-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "routes": [
                    {
                        "name": "[variables('customRouteName')]",
                        "properties": {
                            "addressPrefix": "[variables('customRoutePrefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('customRoutNextHopeIpAddress')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', variables('routeTableName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet2Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet3Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "Nic0",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('uniqueDnsPrefixForVM'), '0')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('uniqueDnsPrefixForVM'), '0'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "Nic1",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('uniqueDnsPrefixForVM'), '1')]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('NvmPrivateIPAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('uniqueDnsPrefixForVM'), '1'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "Nic2",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('uniqueDnsPrefixForVM'), '2')]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('uniqueDnsPrefixForVM'), '2'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('scaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/Nic0')]",
                "[concat('Microsoft.Network/networkInterfaces/Nic1')]",
                "[concat('Microsoft.Network/networkInterfaces/Nic2')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('Nic', copyIndex()))]"
                        }
                    ]
                }
            }
        }
    ]
}