{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "nsgName": {
            "type": "string",
            "defaultValue": "HubNsg"
        },
        "vnet": {
            "type": "object",
            "defaultValue": {
                "name": "HubVnet",
                "addressPref": "192.168.0.0/20",
                "subnet": [
                    {
                        "name": "ManagementSubnet",
                        "addressPref": "192.168.1.0/24",
                        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    },
                    {
                        "name": "SharedSubnet",
                        "addressPref": "192.168.4.0/22",
                        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    },
                    {
                        "name": "DMZSubnet",
                        "addressPref": "192.168.0.0/25"
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "addressPref": "192.168.2.0/24"
                    },
                    {
                        "name": "GatewaySubnet",
                        "addressPref": "192.168.3.0/27"
                    }
                ]
            }
        },
        "spokeTemplate": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "quoteTemplate",
                    "uri": "[uri(parameters('_artifactsLocation'), 'quoteTemplate.json')]",
                    "parameters": {
                        "nsgName": "QuoteNsg",
                        "vnet": {
                            "name": "QuoteVnet",
                            "addressPref": "10.50.0.0/16",
                            "subnet": [
                                {
                                    "name": "QuoteSystemsSubnet",
                                    "addressPref": "10.50.0.0/16",
                                    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups', 'QuoteNsg')]"
                                }
                            ]
                        }
                    },
                    "peeringFromSpokeToHub": false
                },
                {
                    "name": "webTemplate",
                    "uri": "[uri(parameters('_artifactsLocation'), 'webTemplate.json')]",
                    "parameters": {
                        "nsgName": "WebNsg",
                        "vnet": {
                            "name": "WebVnet",
                            "addressPref": "10.100.0.0/16",
                            "subnet": [
                                {
                                    "name": "WebSystemsSubnet",
                                    "addressPref": "10.100.0.0/16",
                                    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups', 'WebVnet')]"
                                }
                            ]
                        }

                    },
                    "peeringFromSpokeToHub": false
                },
                {
                    "name": "hrTemplate",
                    "uri": "[uri(parameters('_artifactsLocation'), 'hrTemplate.json')]",
                    "parameters": {
                        "nsgName": "HRappNsg",
                        "vnet": {
                            "name": "HRappVnet",
                            "addressPref": "10.10.0.0/16",
                            "subnet": [
                                {
                                    "name": "HRsystems",
                                    "addressPref": "10.10.1.0/24",
                                    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups', 'HRappVnet')]"
                                }
                            ]
                        }

                    },
                    "peeringFromSpokeToHub": true
                }
            ]
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[parameters('vnet').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnet').addressPref]"
                    ]
                },
                "copy": [
                    {
                        "name": "subnets",
                        "count": "[length(parameters('vnet').subnet)]",
                        "input": {
                            "name": "[parameters('vnet').subnet[copyIndex('subnets')].name]",
                            "properties": {
                                "addressPrefix": "[parameters('vnet').subnet[copyIndex('subnets')].addressPref]",
                                "networkSecurityGroup": "[if( contains(parameters('vnet').subnet[copyIndex('subnets')], 'nsgID') , json(concat('{\"id\": \"', parameters('vnet').subnet[copyIndex('subnets')].nsgID, '\"}')) , json('null'))]",
                                "delegations": [
                                ],
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "name": "[parameters('spokeTemplate')[copyIndex()].name]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
            ],
            "copy": {
                "name": "spokeCopy",
                "count": "[length(parameters('spokeTemplate'))]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('spokeTemplate')[copyIndex()].uri]"
                },
                "parameters": "[parameters('spokeTemplate')[copyIndex()].parameters]"
            }
        },
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('vnet').name, '/To-', parameters('spokeTemplate')[0].parameters.vnet.name)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnet').name)]",
                "[resourceId('Microsoft.Resources/deployments/', parameters('spokeTemplate')[0].name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[reference(resourceId('Microsoft.Resources/deployments/', parameters('spokeTemplate')[0].name)).outputs.vnetID.value]"
                }
            }
        }
    ],
    "outputs": {
        "fck": {
            "type": "string",
            "value": "yes"
        }
    }
}
